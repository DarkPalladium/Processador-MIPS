
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module MIPS_FPGA(

	//////////// CLOCK //////////
	CLOCK_50,
	CLOCK2_50,
	CLOCK3_50,

	//////////// LED //////////
	LEDG,
	LEDR,

	//////////// KEY //////////
	KEY,

	//////////// SW //////////
	SW,

	//////////// SEG7 //////////
	HEX0,
	HEX1,
	HEX2,
	HEX3,
	HEX4,
	HEX5,
	HEX6,
	HEX7,

	//////////// IR Receiver //////////
	IRDA_RXD
);

//=======================================================
//  PARAMETER declarations
//=======================================================


//=======================================================
//  PORT declarations
//=======================================================

//////////// CLOCK //////////
input 		          		CLOCK_50;
input 		          		CLOCK2_50;
input 		          		CLOCK3_50;

//////////// LED //////////
output		     [8:0]		LEDG;
output		    [17:0]		LEDR;

//////////// KEY //////////
input 		     [3:0]		KEY;

//////////// SW //////////
input 		    [17:0]		SW;

//////////// SEG7 //////////
output		     [6:0]		HEX0;
output		     [6:0]		HEX1;
output		     [6:0]		HEX2;
output		     [6:0]		HEX3;
output		     [6:0]		HEX4;
output		     [6:0]		HEX5;
output		     [6:0]		HEX6;
output		     [6:0]		HEX7;

//////////// IR Receiver //////////
input 		          		IRDA_RXD;


//=======================================================
//  REG/WIRE declarations
//=======================================================
wire clk, reset;
wire [31:0] saida, pc;

//=======================================================
//  Structural coding
//=======================================================


assign LEDG[8] = clk;
assign reset = SW[0];
assign LEDG[7:0] = pc[7:0];

clk_div divisor(CLOCK2_50, clk);

principal p (clk, saida, reset, pc);

representador H0 (saida[3:0], HEX0);
representador H1 (saida[7:4], HEX1);
representador H2 (saida[11:8], HEX2);
representador H3 (saida[15:12], HEX3);
representador H4 (saida[19:16], HEX4);
representador H5 (saida[23:20], HEX5);
representador H6 (saida[27:24], HEX6);
representador H7 (saida[31:28], HEX7);

endmodule
